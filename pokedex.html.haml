/ MODULE 4 - POKEDEX
.ui.centered.grid
  .ten.wide.column
    .panel
      %form.form
        .ui.icon.input.fluid
          %i.search.icon
          %input{name: "id", type:"number", placeholder: "Pokemon ID", value: 1}
      / DO NOT MODIFY ANY LINE ABOVE THIS
      
      / YOUR SOLUTION HERE
      .ui.card
        .image
          %img.name.load{"data-query":"sprites.front_default", "data-input":"src"}
        .content
          %a.header.load{"data-query":"name","data-input":"html"}
          %span.right.floated lbs
          %span.right.floated.load{"data-query":"weight","data-input":"html"}
          .meta
            %span.load{"data-query":"types.0.type.name","data-input":"html"}
            %span.load{"data-query":"types.1.type.name","data-input":"html"}
        .extra.content
          .ui.list
            .item
              .stat.label STATS
            .item
              .stat.label.load{"data-query":"stats.0.stat.name","data-input":"html"}
              .stat.load{"data-query":"stats.0.base_stat","data-input":"html"}
            .item
              .stat.label.load{"data-query":"stats.1.stat.name","data-input":"html"}
              .stat.load{"data-query":"stats.1.base_stat","data-input":"html"}
            .item
              .stat.label.load{"data-query":"stats.2.stat.name","data-input":"html"}
              .stat.load{"data-query":"stats.2.base_stat","data-input":"html"}
            .item
              .stat.label.load{"data-query":"stats.3.stat.name","data-input":"html"}
              .stat.load{"data-query":"stats.3.base_stat","data-input":"html"}
            .item
              .stat.label.load{"data-query":"stats.4.stat.name","data-input":"html"}
              .stat.load{"data-query":"stats.4.base_stat","data-input":"html"}
            .item
              .stat.label.load{"data-query":"stats.5.stat.name","data-input":"html"}
              .stat.load{"data-query":"stats.5.base_stat","data-input":"html"}
          %span #
          %span.panel.load{"data-query":"id","data-input":"html"} #



/ DO NOT MODIFY ANYTHING BELOW THESE LINES
/ ----------------------------------
:javascript
  POKEDEX_URL = "https://pokeapi.co/api/v2/pokemon/";
  DEFAULT_POKEMON = 1
  // MAIN FUNCTION
  $(function() {
    grabPokedex(DEFAULT_POKEMON); 

    // LISTEN FOR CHANGES TO THE FORM
    $("form").submit(function(event) {
      event.preventDefault();
      data = $(this).serializeArray();
      data = _.object(_.pluck(data, "name"), _.pluck(data, "value"));
      grabPokedex(data.id);
      return false;
    });
  });

  // Helper function - String Capitalization
  capitalize = function(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  };

  // Implements dot notation style indexing of JSON
  // e.g. obj = {a: {b: [1]}}
  // traditional indexing: obj["a"]["b"][0] ==> 1
  // dot notation indexing: obj["a.b.0"] ==> 1
  dotNotation = function(obj, query){
    if (_.isUndefined(query)) { return "";}

    query = query.split(".");

    corrupt = false;

    // Try to query 
    _.each(query, function(key) {
      console.log(obj, key)
      if (obj[key]) {
        obj = obj[key];
      } else {
        corrupt = true;
      }
    });
    // Gracefully fail is malformed query
    if (corrupt) {
      return "";
    } else{
      return obj
    }
  }
  // Injection routine
  //  If the data-input property is specified in the DOM definition
  //  then the following actions will take place.
  injectionRoutine = function(el, input, result){
    switch (input) {
      case "html":
        return $(el).html(result);
      case "src":
        return $(el).attr("src", result);
      default:
        return $(el).html(result);
    }
  }
  grabPokedex = function(id) {
    $.getJSON(POKEDEX_URL + id, function(resp) {

      // For each element that has been flagged with a load class,
      // Inject data as specified by the data-query and data-input attributes.
      
      _.each($(".load"), function(el) {
        query = $(el).data("query");
        input = $(el).data("input");
        result = dotNotation(resp, query)
        console.log("Loading", query, input, result)
        injectionRoutine(el, input, result)
      });

      // DEBUG STATEMENT
      console.log("API RESPONSE", resp);
    });
  }


:scss
  .panel{
    margin-top: 60px;
  }
  .stat.label{
    text-transform: uppercase;
    font-weight: bold;
  }
  .stat:not(.label){
    float: right;
  }
